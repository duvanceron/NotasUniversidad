/*
Navicat Oracle Data Transfer
Oracle Client Version : 10.2.0.5.0

Source Server         : CURSOSSEMINARIOSOAD
Source Server Version : 120200
Source Host           : localhost:1521
Source Schema         : CURSOSSEMINARIOSOAD

Target Server Type    : ORACLE
Target Server Version : 120200
File Encoding         : 65001

Date: 2019-04-22 11:45:57
*/


-- ----------------------------
-- Procedure structure for PR_DELETENOTAGROUP
-- ----------------------------
CREATE OR REPLACE PROCEDURE "CURSOSSEMINARIOSOAD"."PR_DELETENOTAGROUP"
(
	NEWNOTA_ID NUMBER
)
AS
  TOTAL VARCHAR2(25);
BEGIN
    TOTAL:=FN_UPDATENOTAFINAL(NEWNOTA_ID);
     DELETE FROM CURSOSSEMINARIOS.NOTA 
     WHERE NOTA_ID =NEWNOTA_ID ;  
END PR_DELETENOTAGROUP;
/

-- ----------------------------
-- Procedure structure for PR_MERGECALIFICACIONINDIVIDUAL
-- ----------------------------
CREATE OR REPLACE PROCEDURE "CURSOSSEMINARIOSOAD"."PR_MERGECALIFICACIONINDIVIDUAL"
(
 NEWCALI_ID NUMBER
,NEWNOTA_ID NUMBER
,NEWCALI_VALOR NUMBER
,NEWPREM_ID NUMBER)
AS 
BEGIN
  MERGE INTO CURSOSSEMINARIOS.CALIFICACION
  USING (SELECT DUMMY FROM DUAL) ON (NOTA_ID=NEWNOTA_ID AND PREM_ID=NEWPREM_ID)
  WHEN MATCHED THEN
  UPDATE SET
  CALI_VALOR=NEWCALI_VALOR
  WHEN NOT MATCHED THEN
  INSERT(CALI_ID,NOTA_ID,CALI_VALOR,PREM_ID)
  VALUES((SELECT NVL(Max(CALI_ID), 0) +1 FROM CURSOSSEMINARIOS.CALIFICACION),NEWNOTA_ID,NEWCALI_VALOR,NEWPREM_ID);
  
   UPDATE CURSOSSEMINARIOS.PREMATRICULA
      SET PREM_NOTAFINAL=ROUND(FN_CALCULARNOTAFINAL(NEWPREM_ID),2)
      WHERE PREM_ID =NEWPREM_ID;
END PR_MERGECALIFICACIONINDIVIDUAL;
/

-- ----------------------------
-- Procedure structure for PR_MERGEPORCENTAJENOTA
-- ----------------------------
CREATE OR REPLACE PROCEDURE "CURSOSSEMINARIOSOAD"."PR_MERGEPORCENTAJENOTA" 
(
  NEWNOTA_ID IN NUMBER 
, NEWNOTA_NOMBRE IN VARCHAR2 
, NEWNOTA_PORCENTAJE IN NUMBER 
, NEWGRUP_ID IN NUMBER 
, NEWSISE_ID IN NUMBER 
) AS 
BEGIN
  MERGE INTO CURSOSSEMINARIOS.NOTA
  USING (SELECT DUMMY FROM DUAL) ON (NOTA_ID= NEWNOTA_ID)
  WHEN MATCHED THEN
  UPDATE SET
  NOTA_NOMBRE=NEWNOTA_NOMBRE,
  NOTA_PORCENTAJE=NEWNOTA_PORCENTAJE,
  GRUP_ID=NEWGRUP_ID,
  SISE_ID=NEWSISE_ID
  WHEN NOT MATCHED THEN
  INSERT( NOTA_ID,NOTA_NOMBRE,NOTA_PORCENTAJE,GRUP_ID,SISE_ID)
  VALUES((SELECT NVL(Max(NOTA_ID), 0) +1 FROM CURSOSSEMINARIOS.NOTA),NEWNOTA_NOMBRE,NEWNOTA_PORCENTAJE,NEWGRUP_ID,NEWSISE_ID);
END PR_MERGEPORCENTAJENOTA;
/

-- ----------------------------
-- Function structure for FN_CALCULARNOTAFINAL
-- ----------------------------
CREATE OR REPLACE FUNCTION "CURSOSSEMINARIOSOAD"."FN_CALCULARNOTAFINAL"(NEWPREM_ID IN NUMBER) 
RETURN  NUMBER IS 
   TOTAL NUMBER;
BEGIN
      SELECT SUM(CALI_VALOR*NOTE.NOTA_PORCENTAJE/100) 
      INTO TOTAL FROM CURSOSSEMINARIOS.CALIFICACION CAL
      INNER JOIN CURSOSSEMINARIOS.NOTA NOTE
      ON CAL.NOTA_ID=NOTE.NOTA_ID
      WHERE  PREM_ID=NEWPREM_ID;
  RETURN TOTAL;
END FN_CALCULARNOTAFINAL;
/

-- ----------------------------
-- Function structure for FN_CALCULARNOTAFINAL_DEL
-- ----------------------------
CREATE OR REPLACE FUNCTION "CURSOSSEMINARIOSOAD"."FN_CALCULARNOTAFINAL_DEL" (
 NEWPREM_ID IN NUMBER
,NEWNOTA_ID IN NUMBER) 
RETURN  NUMBER IS 
   TOTAL NUMBER; 
BEGIN
   SELECT SUM(CALI_VALOR*NOTE.NOTA_PORCENTAJE/100 )
      INTO TOTAL FROM CURSOSSEMINARIOS.CALIFICACION CAL
      INNER JOIN CURSOSSEMINARIOS.NOTA NOTE
      ON CAL.NOTA_ID=NOTE.NOTA_ID
      WHERE  PREM_ID=NEWPREM_ID AND 
      NOTE.NOTA_ID<>NEWNOTA_ID;
  RETURN TOTAL;
END FN_CALCULARNOTAFINAL_DEL;
/

-- ----------------------------
-- Function structure for FN_CONSULTARGRUPOS
-- ----------------------------
CREATE OR REPLACE FUNCTION "CURSOSSEMINARIOSOAD"."FN_CONSULTARGRUPOS" (NEW_TIPOCURSO NUMBER, NEWDOCENTE NUMBER) 
RETURN SYS_REFCURSOR 
IS
CURSOR1 SYS_REFCURSOR;
V_QUERY VARCHAR2(4000);
BEGIN
    OPEN CURSOR1 FOR
      SELECT GRUP.GRUP_ID Codigo,GRUP.GRUP_NOMBRE,GRUP.GRUP_TEMA "Tema",PERIODO.PERI_NOMBRE "Periodó Académico",
      PROGRAMA.PROA_NOMBRE "Programa académico",ASIGNATURA.ASIG_NOMBRE,ASIGNATURA.ASIG_PROGRAMA
      FROM CURSOSSEMINARIOS.GRUPO GRUP  
      INNER JOIN CURSOSSEMINARIOS.COSTO COSTO
      ON GRUP.COST_ID=COSTO.COST_ID
      INNER JOIN CURSOSSEMINARIOS.CURSO CURS 
      ON GRUP.CURS_ID =CURS.CURS_ID 
      LEFT JOIN CURSOSSEMINARIOS.INTENSIDADHORARIA INTENSIDAD
      ON GRUP.INTH_ID=INTENSIDAD.INTH_ID
      INNER JOIN CURSOSSEMINARIOS.CALENDARIOACADEMICO CALENDAR
      ON GRUP.CALA_ID=CALENDAR.CALA_ID
      INNER JOIN CURSOSSEMINARIOS.PERIODO PERIODO
      ON GRUP.PERI_ID=PERIODO.PERI_ID
      LEFT JOIN CURSOSSEMINARIOS.VS_ASIGNATURA ASIGNATURA
      ON GRUP.ASIG_ID=ASIGNATURA.ASIG_ID
      LEFT JOIN CURSOSSEMINARIOS.VS_PROGRAMAACADEMICO PROGRAMA
      ON GRUP.PROA_ID=PROGRAMA.PROA_ID
      LEFT JOIN CURSOSSEMINARIOS.DETALLEDOCENTE DETAL
      ON GRUP.GRUP_ID=DETAL.GRUP_ID
      LEFT JOIN CURSOSSEMINARIOS.VS_DOCENTE DOCENTE
      ON DOCENTE.DOCE_ID=DETAL.DOCE_ID
      WHERE GRUP.CURS_ID = NEW_TIPOCURSO AND
      DOCENTE.DOCE_ID=NEWDOCENTE;
    
    RETURN CURSOR1;
END FN_CONSULTARGRUPOS;
/

-- ----------------------------
-- Function structure for FN_CONSULTARSISTEMASEVALUACION
-- ----------------------------
CREATE OR REPLACE FUNCTION "CURSOSSEMINARIOSOAD"."FN_CONSULTARSISTEMASEVALUACION" 
RETURN SYS_REFCURSOR 
IS
CURSOR1 SYS_REFCURSOR;
V_QUERY VARCHAR2(4000);
BEGIN
 OPEN CURSOR1 FOR
   SELECT *FROM CURSOSSEMINARIOS.SISTEMAEVALUACION;
 RETURN CURSOR1;
END FN_CONSULTARSISTEMASEVALUACION;
/

-- ----------------------------
-- Function structure for FN_LISTARCURSOS
-- ----------------------------
CREATE OR REPLACE FUNCTION "CURSOSSEMINARIOSOAD"."FN_LISTARCURSOS" RETURN SYS_REFCURSOR 
IS
CURSOR1 SYS_REFCURSOR;
BEGIN
	OPEN CURSOR1 FOR
		SELECT CURS_ID,CURS_NOMBRE FROM CURSOSSEMINARIOS.CURSO;
	RETURN CURSOR1;
END FN_LISTARCURSOS;
/

-- ----------------------------
-- Function structure for FN_LISTARNOTAS
-- ----------------------------
CREATE OR REPLACE FUNCTION "CURSOSSEMINARIOSOAD"."FN_LISTARNOTAS" (GRUPO IN NUMBER) 
RETURN SYS_REFCURSOR 
IS
  CURSOR1 SYS_REFCURSOR;
  V_QUERYNOTAS VARCHAR2(4000);
  V_VALUES VARCHAR2(4000);
  V_ESTADO VARCHAR2(40);
  ESTUDIANTES VARCHAR2(10000);
BEGIN
    SELECT 
        LISTAGG('''' || REPLACE(PREM_ESTADO,'''','''''') || '''',',')
        WITHIN GROUP (ORDER BY PREM_ESTADO) AS TEMP_ESTADO
    INTO V_ESTADO
    FROM (SELECT DISTINCT PREM_ESTADO FROM CURSOSSEMINARIOS.PREMATRICULA WHERE PREM_ESTADO='MATRICULADO');
    
   SELECT 
        LISTAGG('''' || NOTA_NOMBRE || ''' AS "' || NOTA_NOMBRE||'('||NOTA_PORCENTAJE||'%) '||NOTA_ID  || '"', ',') 
        WITHIN GROUP (ORDER BY NOTA_NOMBRE)
    INTO V_VALUES
    FROM   (SELECT DISTINCT NOTA_ID,NOTA_NOMBRE,NOTA_PORCENTAJE FROM CURSOSSEMINARIOS.NOTA  WHERE GRUP_ID=GRUPO);
   
     ESTUDIANTES:='ESTU_PRIMERNOMBRE||'||' '||'ESTU_SEGUNDONOMBRE|| '||' '||'ESTU_PRIMERAPELLIDO|| '||' '||'ESTU_SEGUNDOAPELLIDO AS NOMBRE';
      
     V_QUERYNOTAS:='SELECT * FROM( 
        SELECT  PREM_ID,CODIGO,DOCUMENTO,NOMBRE,NOTA,DESCRIPCION,DEFINITIVA FROM  
            (
            SELECT EST.ESTU_ID CODIGO,EST.ESTU_NUMERODOCUMENTO DOCUMENTO,PREM.PREM_ID,'||ESTUDIANTES||',
            CAL.CALI_VALOR NOTA,NOTE.NOTA_NOMBRE DESCRIPCION,PREM.PREM_FALLAS FALLAS,PREM.PREM_NOTAFINAL DEFINITIVA
            FROM  CURSOSSEMINARIOS.PREMATRICULA PREM
            INNER JOIN CURSOSSEMINARIOS.VS_ESTUDIANTE EST
            ON PREM.ESTU_ID = EST.ESTU_ID
            INNER JOIN CURSOSSEMINARIOS.GRUPO GRUP
            ON PREM.GRUP_ID=GRUP.GRUP_ID
            LEFT  JOIN CURSOSSEMINARIOS.CALIFICACION CAL
            ON PREM.PREM_ID=CAL.PREM_ID
            LEFT JOIN CURSOSSEMINARIOS.NOTA NOTE
            ON NOTE.NOTA_ID=CAL.NOTA_ID
            WHERE PREM.GRUP_ID ='||GRUPO||'
            AND PREM.PREM_ESTADO =' ||V_ESTADO|| '
            ) 
        NOTAS
    )
    PIVOT (
        SUM(NOTA)
        FOR DESCRIPCION IN(' ||V_VALUES|| '))
    ORDER BY (CODIGO)';
    
     OPEN CURSOR1 FOR  V_QUERYNOTAS; 
    
    
  RETURN CURSOR1;
END FN_LISTARNOTAS;
/

-- ----------------------------
-- Function structure for FN_LISTARPESOSACADEMICOS
-- ----------------------------
CREATE OR REPLACE FUNCTION "CURSOSSEMINARIOSOAD"."FN_LISTARPESOSACADEMICOS" (NEW_GRUPID NUMBER)
RETURN SYS_REFCURSOR 
IS
CURSOR1 SYS_REFCURSOR;
V_QUERY VARCHAR2(4000);
BEGIN
	OPEN CURSOR1 FOR
		SELECT NOTA_ID,NOTA_NOMBRE ||' (' ||NOTA_PORCENTAJE||'%)' DESCRIPCION,NOTA_PORCENTAJE,SISTEMA.SISE_NOMBRE,SISTEMA.SISE_ID 
		FROM CURSOSSEMINARIOS.NOTA NOTE
		INNER JOIN CURSOSSEMINARIOS.SISTEMAEVALUACION SISTEMA
		ON NOTE.SISE_ID=SISTEMA.SISE_ID
		WHERE GRUP_ID=NEW_GRUPID
		ORDER BY DESCRIPCION;
	RETURN CURSOR1;
END FN_LISTARPESOSACADEMICOS;
/

-- ----------------------------
-- Function structure for FN_LISTARSEMINARIOS
-- ----------------------------
CREATE OR REPLACE FUNCTION "CURSOSSEMINARIOSOAD"."FN_LISTARSEMINARIOS" (NEW_TIPOCURSO NUMBER, NEWDOCENTE NUMBER) 
RETURN SYS_REFCURSOR 
IS
CURSOR1 SYS_REFCURSOR;
V_QUERY VARCHAR2(4000);
BEGIN
    OPEN CURSOR1 FOR
      SELECT GRUP.GRUP_ID Codigo,GRUP.GRUP_NOMBRE "Nombre Grupo",GRUP.GRUP_TEMA "Tema",PERIODO.PERI_NOMBRE "Periodó Académico",
      PROGRAMA.PROA_NOMBRE "Programa académico"
      FROM CURSOSSEMINARIOS.GRUPO GRUP  
      INNER JOIN CURSOSSEMINARIOS.COSTO COSTO
      ON GRUP.COST_ID=COSTO.COST_ID
      INNER JOIN CURSOSSEMINARIOS.CURSO CURS 
      ON GRUP.CURS_ID =CURS.CURS_ID 
      LEFT JOIN CURSOSSEMINARIOS.INTENSIDADHORARIA INTENSIDAD
      ON GRUP.INTH_ID=INTENSIDAD.INTH_ID
      INNER JOIN CURSOSSEMINARIOS.CALENDARIOACADEMICO CALENDAR
      ON GRUP.CALA_ID=CALENDAR.CALA_ID
      INNER JOIN CURSOSSEMINARIOS.PERIODO PERIODO
      ON GRUP.PERI_ID=PERIODO.PERI_ID
      INNER JOIN CURSOSSEMINARIOS.VS_PROGRAMAACADEMICO PROGRAMA
      ON GRUP.PROA_ID=PROGRAMA.PROA_ID
      LEFT JOIN CURSOSSEMINARIOS.DETALLEDOCENTE DETAL
      ON GRUP.GRUP_ID=DETAL.GRUP_ID
      LEFT JOIN CURSOSSEMINARIOS.VS_DOCENTE DOCENTE
      ON DOCENTE.DOCE_ID=DETAL.DOCE_ID
      WHERE GRUP.CURS_ID = NEW_TIPOCURSO AND
      DOCENTE.DOCE_ID=NEWDOCENTE;
    
    RETURN CURSOR1;
END FN_LISTARSEMINARIOS;
/

-- ----------------------------
-- Function structure for FN_UPDATENOTAFINAL
-- ----------------------------
CREATE OR REPLACE FUNCTION "CURSOSSEMINARIOSOAD"."FN_UPDATENOTAFINAL"(NEWNOTA_ID IN NUMBER) 
RETURN VARCHAR2 IS 
   CURSOR c_customers is 
   SELECT  DISTINCT (PREM_ID)FROM CURSOSSEMINARIOS.CALIFICACION WHERE NOTA_ID=NEWNOTA_ID; 
   type c_list is varray (6) of CURSOSSEMINARIOS.CALIFICACION.PREM_ID%type; 
   name_list c_list := c_list(); 
   counter integer :=0; 
   
BEGIN 
    FOR n IN c_customers LOOP 
      counter := counter + 1; 
      name_list.extend; 
      name_list(counter)  := n.PREM_ID; 
      UPDATE CURSOSSEMINARIOS.PREMATRICULA
      SET PREM_NOTAFINAL=ROUND(FN_CALCULARNOTAFINAL_DEL(name_list(counter),NEWNOTA_ID),2)
      WHERE PREM_ID =name_list(counter);
   END LOOP;
  RETURN '';  
END FN_UPDATENOTAFINAL;
/
